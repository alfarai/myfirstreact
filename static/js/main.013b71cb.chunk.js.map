{"version":3,"sources":["logo.svg","components/Greet.js","components/Message.js","components/Button.js","commons/http-common.js","services/helloService.js","components/Hello.js","services/empService.js","components/Emp.js","App.js","index.js"],"names":["Greet","props","name","heroname","children","Message","Button","addCount","setState","count","state","onClick","this","React","Component","axios","create","baseURL","headers","httpCommon","get","Hello","useState","hello","setHello","useEffect","helloService","then","response","data","Emp","emp","setEmp","empService","catch","err","console","log","border","map","person","department","location","id","App","className","src","logo","alt","href","target","rel","Circle","value","Square","Board","squares","Array","fill","i","slice","handleClick","renderSquare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.013b71cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Greet = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Hello {props.name} aka {props.heroname} </h1>\r\n            {props.children}\r\n        </div>\r\n    )\r\n        \r\n    \r\n    \r\n        \r\n    \r\n}\r\n\r\nexport default Greet;","const Message = () => {\r\n    return <p>this is a props children for greet</p>\r\n}\r\nexport default Message","import React from \"react\"\r\n\r\nclass Button extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            count : 0\r\n        }\r\n    }\r\n    addCount = () => {\r\n        this.setState(\r\n            {\r\n                count : ++this.state.count\r\n            }\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.addCount}>Click me!!</button>\r\n                <p>count = {this.state.count}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL : 'http://localhost:8080/api/v1',\r\n    headers : {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})","import httpCommon from \"../commons/http-common\";\r\n\r\nconst getHello = () =>{\r\n    return httpCommon.get('/greet/hello');\r\n}\r\n\r\nexport default {getHello};","import { useEffect, useState } from \"react\";\r\nimport helloService from \"../services/helloService\";\r\n\r\nconst Hello = () => {\r\n\r\n    const [hello,setHello] = useState(\"test\");\r\n\r\n    useEffect(()=>{\r\n        helloService.getHello()\r\n        .then(\r\n        response => {\r\n            setHello(response.data);\r\n        }\r\n        )\r\n    })\r\n    return hello;\r\n}\r\n\r\nexport default Hello;","import httpCommon from \"../commons/http-common\";\r\n\r\nconst getEmployees = () =>{\r\n    return httpCommon.get('/employee/employees');\r\n}\r\n\r\nexport default {getEmployees};","import { useEffect, useState } from \"react\";\r\nimport empService from \"../services/empService\";\r\nconst Emp = () =>{\r\n    const [emp,setEmp] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        empService.getEmployees().then(response => {setEmp(response.data)}).catch(err=>{console.log(\"something went wrong\")})\r\n    })\r\n    return (\r\n        <div>\r\n            <h3>List of Employees</h3>\r\n            <div>\r\n                <table border = \"1\">\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>Department</td>\r\n                        <td>Location</td>\r\n                    </tr>\r\n                    {\r\n                        emp.map(\r\n                            person => (\r\n                                <tr key={person.id}>\r\n                                    <td>{person.name}</td>\r\n                                    <td>{person.department}</td>\r\n                                    <td>{person.location}</td>\r\n                                </tr>\r\n                            )\r\n                        )\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Emp;","import logo from './logo.svg';\nimport './App.css';\nimport Greet from './components/Greet';\nimport Message from './components/Message';\nimport Button from './components/Button';\nimport Hello from './components/Hello';\nimport Emp from './components/Emp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload. -benito\n        </p>\n        <Emp/>\n        <Greet name={Hello()} heroname=\"Male\">\n          <Message/>\n        </Greet>\n\n        <Greet name=\"otineB\" heroname=\"elaM\">\n            <Button/>\n        </Greet>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n/* original\nReactDOM.render( \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n*/\nclass Circle extends React.Component{\n  render(){\n    return(\n      <button id = \"button\" className = \"circle\" onClick = {()=>this.props.onClick()}>{this.props.value}</button>\n    )};\n}\nclass CircleBoard extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      circles : Array(3).fill(\"white\")\n    }\n  }\n  makeBlack(i){\n    var circles2 = this.state.circles.slice();\n    if(circles2[i] != \"black\")\n      circles2[i] = \"black\";\n    else\n      circles2[i] = \"white\";\n    this.setState({circles : circles2});\n    \n  }\n  renderCircle(i){\n    return(\n      <Circle value = {this.state.circles[i]} onClick = {()=>this.makeBlack(i)}></Circle>\n    )\n  }\n  render(){\n    return(\n      <div>\n        {this.renderCircle(0)}\n        {this.renderCircle(1)}\n        {this.renderCircle(2)}\n      </div>\n      \n    )\n  }\n}\n\nclass Square extends React.Component {\n  /*\n  constructor(props){\n    super(props);\n    this.state = {\n      value : null\n    };\n  }\n  */\n  msg(){\n    console.log(\"Hello!\");\n  }\n  \n  /*\n  setVal(){\n    this.setState(\n      {\n        value : 'X'\n      }\n    )\n  }\n  */\n  render() {\n    return (\n      <button \n        className=\"square\" \n        onClick = {() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      squares : Array(9).fill(null),\n    }\n  }\n\n  handleClick(i){\n    const squares = this.state.squares.slice();\n    squares[i] = \"X\";\n    this.setState({squares : squares});\n  }\n  renderSquare(i) {\n    return (\n    <Square \n      value={this.state.squares[i]} \n      onClick = {() => this.handleClick(i)}\n    />\n    );\n  }\n\n  render() {\n    const status = 'Next player: X';\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render( \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/*\nThoughts before the \"why is immutability important\" section:\nWhat we've done so far is, from the CSS, we made squares, and we managed to build a board composed of these squares by repeatedly calling renderSquare(i)\nwherein the i is like its position on the board (like a square's id). Now it was proven that its difficult to keep track of the states of each square\nfrom the Board component if each square is keeping track of its own state (X or O or null). The solution was for the Board component to keep track of \nall its squares' states. This act of retrieving data from multiple children to a parent component can be done by passing a function to its children.\nWhat we did is we made another prop (property) of a single square called onClick, which calls the handleClick() handler method of Board component\nto handle clicks made from each square. Meaning, each square now has an event handler when a click is made, and this event is handled by the handleClick().\nWe also set its value to its own position from the square array state of the Board comp. This square array keeps track of all the states of each squares,\nwherein it gets updated by the handleClick(), by simple changing the square[i] to a value. Each square button in the square component also has its own\nonClick event handler. When an individual square is clicked, it calls on the this.props.onClick(). Remember that we assigned a property to each squares\nearlier called onClick(). This this.props.onClick() refers to the onClick() property, and this onClick() property is the one that calls the handleClick(i)\nmethod, so its like the event of clicking the button of a square is propagated upwards to the Board component, so it can keep track of the state of a square.\nAfter it has propagated up, based on which square was clicked (represented by i), it updates the this.state.squares[i] state of the board to a value \nby doing this.setState({squares : squares}), wherein the state square of the Board component copies from the local array squares, which has the\nupdated states of the squares. \n\nThis now means that each square components are now controlled components in React terms of the Board component. The Board component has total control\nof all the square components.\n*/"],"sourceRoot":""}