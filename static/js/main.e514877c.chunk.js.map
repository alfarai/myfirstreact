{"version":3,"sources":["logo.svg","components/Greet.js","components/Message.js","components/Button.js","commons/http-common.js","services/helloService.js","components/Hello.js","services/empService.js","components/Emp.js","components/Home.js","components/NavBar.js","components/PageNotFound.js","components/AddEmp.js","components/Router.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","props","name","heroname","children","Message","Button","addCount","setState","count","state","onClick","this","React","Component","axios","create","baseURL","headers","httpCommon","get","Hello","useState","hello","setHello","useEffect","helloService","then","response","data","post","id","delete","Emp","emp","setEmp","refreshTable","empService","catch","err","console","log","className","map","person","department","location","to","e","error","Home","src","logo","alt","href","target","rel","NavBar","type","tabindex","PageNotFound","AddEmp","setName","setLocation","setDepartment","navigate","useNavigate","useParams","for","placeholder","onChange","value","preventDefault","employee","saveEmp","Router","exact","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e514877c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Greet = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Hello {props.name} aka {props.heroname} </h1>\r\n            {props.children}\r\n        </div>\r\n    )\r\n        \r\n    \r\n    \r\n        \r\n    \r\n}\r\n\r\nexport default Greet;","const Message = () => {\r\n    return <p>this is a props children for greet</p>\r\n}\r\nexport default Message","import React from \"react\"\r\n\r\nclass Button extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            count : 0\r\n        }\r\n    }\r\n    addCount = () => {\r\n        this.setState(\r\n            {\r\n                count : ++this.state.count\r\n            }\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.addCount}>Click me!!</button>\r\n                <p>count = {this.state.count}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({//used to connect to api\r\n    baseURL : 'http://localhost:8080/api/v1',\r\n    headers : {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})","import httpCommon from \"../commons/http-common\";\r\n\r\nconst getHello = () =>{\r\n    return httpCommon.get('/greet/hello');\r\n}\r\n\r\nexport default {getHello};","import { useEffect, useState } from \"react\";\r\nimport helloService from \"../services/helloService\";\r\n\r\nconst Hello = () => {\r\n\r\n    const [hello,setHello] = useState(\"test\");\r\n\r\n    useEffect(()=>{\r\n        helloService.getHello()\r\n        .then(\r\n        response => {\r\n            setHello(response.data);\r\n        }\r\n        )\r\n    })\r\n    return hello;\r\n}\r\n\r\nexport default Hello;","import httpCommon from \"../commons/http-common\";\r\n//services to be reused. its like concatenating the base url in http-common to the urls here to access the methods in the API\r\nconst getEmployees = () =>{\r\n    return httpCommon.get('/employee/employees');\r\n}\r\nconst postEmployee = (data) =>{\r\n    return httpCommon.post('/employee/employees',data);\r\n}\r\nconst getEmployee = (id) =>{\r\n    return httpCommon.get(`/employee/employees/${id}`);\r\n}\r\nconst putEmployee = (data) =>{\r\n    return httpCommon.post('/employee/employees',data);\r\n}\r\nconst deleteEmployee = (id) =>{\r\n    return httpCommon.delete(`/employee/employees/${id}`)\r\n}\r\n\r\nexport default {getEmployees,postEmployee,putEmployee,getEmployee,deleteEmployee};","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport empService from \"../services/empService\";\r\nconst Emp = () =>{ //used to show the employee table list\r\n    //emp is state, setEmp is a setter function for emp\r\n    const [emp,setEmp] = useState([]);\r\n\r\n    //called every render of react. these are \"side effects\" such as changing the DOM, or data fetching (what we're doing).\r\n    //after rendering the page itself on the return(), we perform useEffect() to fetch the data from our API. We get a list/array of employees from \r\n    //the response.data and we set it to the emp variable using setEmp(), which will be used to map values to our table inside return()\r\n    useEffect(()=>{\r\n        refreshTable();\r\n    })\r\n\r\n    const refreshTable = ()=>{ //contents of useEffect was moved here\r\n        empService.getEmployees() //promise\r\n        .then(response => {\r\n            setEmp(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(\"something went wrong\")\r\n        })\r\n    }\r\n    /*Process for deletion :\r\n    We made the actual database deletion code in the API, which we are calling from the empService.js methods. We created a new function above called\r\n    refreshTable so we can use it to manually refresh table upon deletion by the onClick function, where we pass an event e to (e) and calls on\r\n    deleteEmp(person.id), which is the function that calls the method from the API through our service (promise).\r\n    */\r\n\r\n    const deleteEmp = (id) => {\r\n        empService.deleteEmployee(id)\r\n        .then(\r\n            response => {\r\n                console.log(\"Successfully deleted employee\");\r\n                refreshTable(); //manually refresh the table upon successful response (deletion)\r\n            }\r\n        )\r\n        .catch(\r\n            error => {\r\n                console.error(\"Something went wrong\",error);\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div className = \"container\">\r\n            <h3>List of Employees</h3>\r\n            <div>\r\n                <table className = \"table table-hover table-light\">\r\n                    <thead className = \"table-warning\">\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>Department</td>\r\n                        <td>Location</td>\r\n                        <td>Actions</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        emp.map( //takes the list of employees fetched from API and maps each parameters of an employee to is respective column.\r\n                            person => (\r\n                                //the link tag below creates a button such that when clicked, takes the id of the employee (${person.id}) \r\n                                //and passes it as paramter to the url /Edit/... which routes to this part of Router.js :  <Route exact path = \"/Edit/:id\" element = {<AddEmp/>}/>.\r\n                                //Note that link is used for routing, so delete function doesnt need it since we just want to delete\r\n                                <tr key={person.id}>\r\n                                    <td>{person.name}</td>\r\n                                    <td>{person.department}</td>\r\n                                    <td>{person.location}</td>\r\n                                    <td>\r\n                                        <div className = \"d-grid gap-2 d-md-flex content-md-end\">\r\n                                            <Link className=\"btn btn-primary\" to = {`/Edit/${person.id}`}>Update</Link> \r\n                                            <button className=\"btn btn-danger\" onClick = {(e)=>deleteEmp(person.id)}>Delete</button>\r\n                                        </div>\r\n                                        \r\n                                    </td> \r\n                                </tr>\r\n                            )\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Emp;","import logo from '../logo.svg';\r\nimport '../App.css';\r\nimport Greet from './Greet';\r\nimport Message from './Message';\r\nimport Button from './Button';\r\nimport Hello from './Hello';\r\nimport Emp from './Emp';\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload. -benito\r\n        </p>\r\n        <Emp/>\r\n        <Greet name={Hello()} heroname=\"Male\">\r\n          <Message/>\r\n        </Greet>\r\n\r\n        <Greet name=\"otineB\" heroname=\"elaM\">\r\n            <Button/>\r\n        </Greet>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const NavBar = ()=> { //used for navigation bar to redirect to different pages\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/myfirstreact\">ICS2608</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"/myfirstreact\">Home</a>\r\n                            <a className=\"nav-link\" href=\"/Emp\">Employees</a>\r\n                            <a className=\"nav-link\" href=\"/AddEmp\">Add Employees</a>\r\n                            <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","const PageNotFound = () => {\r\n    return(\r\n        <h1>Page not found</h1>\r\n    )\r\n}\r\nexport default PageNotFound;","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport empService from \"../services/empService\";\r\n\r\nconst AddEmp = () =>{\r\n    \r\n    const [name,setName] = useState(\"\"); //name is the state, setName is a function that updates the state\r\n    const [location,setLocation] = useState(\"\");\r\n    const [department,setDepartment] = useState(\"\");\r\n    \r\n    const navigate = useNavigate(); //used to navigate to another page, used as navigate(\"page path here\")\r\n\r\n    //gets the person.id from : <td><Link className=\"btn btn-primary\" to = {`/Edit/${person.id}`}>Update</Link></td> in Emp.js.\r\n    //what happens is when we click the update button in Emp component, the id of that employee gets passed in the url, and we can retrieve\r\n    //that id with useParams() to be used by our current component AddEmp, so that if this id exists (if its in the url), it means we clicked\r\n    //from the update button and we're doing a put request, else if it doesn't exist, we're doing a post request\r\n    const {id} = useParams(); \r\n    \r\n    /* Create/Update part is the hardest in CRUD atleast for this app, so the general process is as follows (with some other omitted steps in between):\r\n    We take user input from the app itself which is found in the return() method below, and upon clicking the save button, each input is passed\r\n    as one argument into saveEmp(e). This function then puts all those parameters into one variable \"employee\" to be passed as argument for the API\r\n    post/put, which we call with the help of the empService.\r\n\r\n    */\r\n\r\n    const saveEmp = (e) => {\r\n        e.preventDefault(); //prevents refreshing\r\n        const employee = {id,name,location,department}\r\n        if(id){//update (put)\r\n            console.log(id);\r\n            empService.putEmployee(employee)\r\n            .then(response => {\r\n                console.log(\"Employee updated\");\r\n                navigate(\"/Emp\")\r\n            })\r\n            .catch(error => console.log(\"Something went wrong\")) //promise\r\n        }\r\n        else{//add (post)\r\n            empService.postEmployee(employee)\r\n            .then(response => {\r\n                console.log(\"Employee added\");\r\n                navigate(\"/Emp\")\r\n            })\r\n            .catch(error => console.log(\"Something went wrong\")) //promise\r\n        }\r\n       \r\n    }\r\n    /*\r\n    This is an incomplete process. The goal was if we were to update an employee, it would be more convenient to already show the existing data\r\n    to their respective input fields in /AddEmp page. This useEffect successfully retrieves the data to be updated, but doesn't put it into the 3 input\r\n    fields, which might need mapping(?) or changing their value attributes(?)\r\n\r\n    *if you uncomment this, the PUT will break. It will say that it updated, but it hasn't actually updated, could be because its updating with using the same values present (?)\r\n    \r\n    useEffect(\r\n        ()=>{\r\n            if(id){\r\n                empService.getEmployee(id)\r\n                .then(\r\n                    employee => {\r\n                        setName(employee.data.name);\r\n                        setLocation(employee.data.location);\r\n                        setDepartment(employee.data.department);\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        console.error(\"Something went wrong\",error);\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    )\r\n    */\r\n    \r\n    return(\r\n        <div className =\"container\">\r\n            <h1>Add Employees</h1>\r\n            <form>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"name\" className=\"form-label\">Name</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"name\" placeholder =\"Input employee name\" onChange = {\r\n                        (e) => setName(e.target.value)  //updates the states\r\n                    }\r\n                    />\r\n                </div>\r\n               \r\n                <div className=\"mb-3\">\r\n                    <label for=\"location\" className=\"form-label\">Location</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"location\" placeholder =\"Input employee location\" onChange = {\r\n                        (e) => setLocation(e.target.value)  \r\n                    }/>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label for=\"department\" className=\"form-label\">Department</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"department\" placeholder =\"Input employee department\" onChange = {\r\n                        (e) => setDepartment(e.target.value) \r\n                    }/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={(e) => saveEmp(e)}>Save</button> \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default AddEmp;","import PageNotFound from \"./PageNotFound\"\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Routes } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Emp from \"./Emp\";\r\nimport AddEmp from \"./AddEmp\";\r\n\r\nconst Router = () => { //used for routing, exact path is the url, element is the component to be displayed for the given url\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Routes>\r\n                    <Route exact path=\"/myfirstreact\" element = {<Home/>}/>\r\n                    <Route exact path=\"*\" element = {<PageNotFound/>}/>\r\n                    <Route exact path = \"/Emp\" element = {<Emp/>}/>\r\n                    <Route exact path = \"/AddEmp\" element = {<AddEmp/>}/>\r\n                    <Route exact path = \"/Edit/:id\" element = {<AddEmp/>}/>\r\n                </Routes>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\nexport default Router;","import './App.css';\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport Router from './components/Router';\n\nfunction App() {\n  return (\n    <div>\n        <NavBar/>\n        <Router/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render( \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n"],"sourceRoot":""}